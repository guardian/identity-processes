AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  Stage:
    Description: environment name
    Type: String
    AllowedValues:
    - CODE
    - PROD

Resources:
  FormstackConsentsLambda:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 512
      FunctionName: !Sub FormstackConsentsLambda-${Stage}
      Timeout: 120
      Description: Lambda to send email to user who has signed up to a newsletter via Formstack
      Handler: com.gu.identity.formstackconsents.Lambda::handler
      Runtime: java8
      CodeUri:
        Bucket: identity-lambda
        Key: !Sub identity/${Stage}/formstack-consents-lambda/main.jar
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/FormstackConsentsLambda-${Stage}:log-stream:*
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ssm:GetParameter
          Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/FormstackConsentsLambda-${Stage}
    Events:
      GetApi:
        Type: Api
        Properties:
          RestApiId:
            Ref: ServlessRestApi
          Path: /consent
          Method: POST

  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Sub ${Stage}
      DefinitionBody:
        swagger: 2.0
        info:
          version: '1.0'
          title:
            Ref: AWS::StackName
        paths:
          /consent:
            post:
              x-amazon-apigateway-integration:
                # The HTTP method used in the integration request. For Lambda function invocations, the value must be POST.
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FormstackConsentsLambda.Arn}/invocations
              responses: {}

  FormstackConsentsLambdaPerms:
    Type: AWS::Lambda::Permission
    DependsOn:
      - FormstackConsentsLambda
      - ServerlessRestApi
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref FormstackConsentsLambda
      Principal: apigateway.amazonaws.com

  FormstackConsentsLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FormstackConsentsLambda}
      RetentionInDays: 14

  FormstackConsentsDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Stage}-formstack-consents-dead-letter


#      take as input em in Lambda UI
#      environment params